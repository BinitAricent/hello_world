route.from=http://10.206.218.54:8080/ticket
route.to=PollerProcessor, "poll()"
poller.from=timer://itsmpoller?period=100000
poll.to=SimpleProcessor
queue.ticketId=rabbitmq:localhost:5672/tasks?username=guest&password=guest&autoDelete=false&routingKey=camel&queue=task_queue
queue.ticketDetail:rabbitmq://localhost:5672/ticketdetailqueue
route.queueTicketDetails:rabbitmq://localhost:5672/ticketdetailqueue
uri=http://10.206.218.54:8080/ticketDetail?ticketId=
threads=5
queueTicketId=5



# Thymeleaf
#spring.thymeleaf.cache: false
#
## Hibernate
#hibernate.dialect: org.hibernate.dialect.MySQLDialect
#hibernate.show_sql: true
#hibernate.hbm2ddl.auto: create
#
#entitymanager.packagesToScan: netgloo
#
#
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/itsm_db
spring.datasource.username=root
spring.datasource.password= root@123

spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create

spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
